{"componentChunkName":"component---src-templates-blog-post-js","path":"/variance-in-scala/","result":{"data":{"mdx":{"id":"75ef54b6-a0ed-5154-a987-bcbb452a9e92","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Variance in Scala\",\n  \"date\": \"2020-10-09T12:46:37.121Z\",\n  \"additionalTimeToRead\": 5,\n  \"categories\": [\"Scala\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When we want to factorize common behaviors, we can rely on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"generics\"), \" (also known as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"type constructors\"), \"\\nor \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"parametric polymorphic types\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The Scala language allows us to be very specific about subtyping relationship between them...\\nlet's dive in what is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"variance\"), \" after a quick tour about \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"type constructors\"), \".\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Type constructor\"), mdx(\"p\", null, \"A type constructor is declared by suffixing a type with the list of generic types wrapped by square brackets.  \"), mdx(\"p\", null, \"For a given type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\"), \" is here the type constructor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" represents the generic part and is called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"type parameter\"), \".  \")), mdx(\"p\", null, \"We usually pronounce it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"F of T\\\"\"), \".\"), mdx(\"p\", null, \"It is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"type constructor\"), \" because it will finally \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"construct\\\"\"), \" concrete types (also called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"parametrized types\"), \")\\nsuch as \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \".\"), mdx(\"p\", null, \"Type constructors may have many type parameters separated by commas, e.g.: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"A\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" B\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" C\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \".\"), mdx(\"p\", null, \"A lot of Scala well-known types are type constructors, e.g.: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"List\"), \", \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Option\"), \", \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Try\"), \", \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Either\"), \"\\nand even \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Function\"), \" !\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Variance\"), mdx(\"p\", null, \"Actually, variance notion is closely related to the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Liskov_substitution_principle\"\n  }), \"Liskov Substitution Principle\"), \"\\n(the \\\"L\\\" in the famous \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/SOLID\"\n  }), \"\\\"S.O.L.I.D\\\" acronym\"), \")\\nwhich tells us:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"), \" is a subtype of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \", then objects of type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" may be replaced with objects of type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"))), mdx(\"p\", null, \"We can thus wonder how it would work for type constructors...\\nfor instance, the type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\")), \" is a subtype of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\")), \", but according to our needs,\\nwhat whould be the subtyping relationship between \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" ?   \"), mdx(\"p\", null, \"First, let's discover the 3 kinds of variance that could be defined\\nby adding (or not) \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variance annotations\"), \":\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\")), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\")), \" symbols before a type parameter:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#invariance\"\n  }), \"Invariance\"), \": \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#covariance\"\n  }), \"Covariance\"), \": \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#contravariance\"\n  }), \"Contravariance\"), \": \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")))), mdx(\"hr\", null), mdx(\"p\", null, \"For all examples we will use (by importing them):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A 3 types hierarchy into the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"HumanResources\"), \" object\")), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IEh1bWFuUmVzb3VyY2VzIHsKICAgIGNsYXNzIEVtcGxveWVlKHZhbCBuYW1lOiBTdHJpbmcpCiAgICBjbGFzcyBUZWNoRW1wbG95ZWUob3ZlcnJpZGUgdmFsIG5hbWU6IFN0cmluZykgZXh0ZW5kcyBFbXBsb3llZShuYW1lKQogICAgY2FzZSBjbGFzcyBEZXZlbG9wZXIob3ZlcnJpZGUgdmFsIG5hbWU6IFN0cmluZywgZmF2b3JpdGVMYW5ndWFnZTogU3RyaW5nKSBleHRlbmRzIFRlY2hFbXBsb3llZShuYW1lKQp9\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"105ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" HumanResources \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"105ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"105ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"105ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" favoriteLanguage\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"105ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"))))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Some values from \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"HumanResources\"))), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"aW1wb3J0IEh1bWFuUmVzb3VyY2VzLl8KCi8vIEVtcGxveWVlcwp2YWwgYm9iID0gbmV3IEVtcGxveWVlKCJCb2IiKQp2YWwgamFuZSA9IG5ldyBFbXBsb3llZSgiSmFuZSIpCnZhbCBhbGZyZWQgPSBuZXcgRW1wbG95ZWUoIkFsZnJlZCIpCnZhbCBjYXNzaWUgPSBuZXcgRW1wbG95ZWUoIkNhc3NpZSIpCgovLyBNb3JlIHNwZWNpZmljIGVtcGxveWVlczogVGVjaCBFbXBsb3llZXMKdmFsIGplcmVteSA9IG5ldyBUZWNoRW1wbG95ZWUoIkplcmVteSIpCnZhbCBhbGV4ID0gbmV3IFRlY2hFbXBsb3llZSgiQWxleCIpCgovLyBWZXJ5IHNwZWNpZmljIGVtcGxveWVlczogRGV2ZWxvcGVycwp2YWwgbHVjID0gRGV2ZWxvcGVyKCJMdWMiLCAiU2NhbGEiKQp2YWwgYWxpY2UgPSBEZXZlbG9wZXIoIkFsaWNlIiwgIkdvIik=\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Employees\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" bob \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Bob\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" jane \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Jane\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" alfred \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Alfred\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" cassie \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Cassie\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// More specific employees: Tech Employees\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" jeremy \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Jeremy\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" alex \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Alex\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Very specific employees: Developers\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" luc \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"43ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" alice \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Alice\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Go\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"))))), mdx(\"hr\", null), mdx(\"h3\", {\n    id: \"invariance\"\n  }, \"Invariance\"), mdx(\"h4\", null, \"Definition\"), mdx(\"p\", null, \"Invariance \\u2014 which means \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"no variance\\\"\"), \" \\u2014 for a type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\"), \" and a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" is noted \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It is used when we do not want neither supertypes nor subtypes of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" share any of their subtyping relationship\\nwith \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \".  \"), mdx(\"p\", null, \"N.B: It is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"the default used variance\"), \" as it does not require any annotation.  \"), mdx(\"h4\", null, \"Example\"), mdx(\"p\", null, \"As an example, we will create a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"meeting\"), \" that should be capable to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"gather\\\"\"), \" with another one.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Let's create a generic \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\"), \" and a few kinds of meetings as subtypes...\"), mdx(\"p\", null, \"Considering an invariant type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Meeting\"), \" with a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \": \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \",\\nthen neither \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" nor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" and nor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" will have any\\nsubtyping relationship between them.  \"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IEludmFyaWFuY2VFeGFtcGxlIHsKICAgIGltcG9ydCBIdW1hblJlc291cmNlcy5fCgogICAgLy8gTWVldGluZyBpcyBkZWNsYXJlZCBhcyBhbiBpbnZhcmlhbnQgdHlwZSBjb25zdHJ1Y3RvcgogICAgY2xhc3MgTWVldGluZ1tUXSh2YWwgbmFtZTogU3RyaW5nLCB2YWwgYXR0ZW5kZWVzOiBMaXN0W1RdKSB7CiAgICAgICAgZGVmIGdhdGhlcihvdGhlck1lZXRpbmc6IE1lZXRpbmdbVF0pOiBNZWV0aW5nW1RdID0gbmV3IE1lZXRpbmdbVF0oCiAgICAgICAgICAgIHMiJG5hbWUgJiAke290aGVyTWVldGluZy5uYW1lfSIgLAogICAgICAgICAgICAoYXR0ZW5kZWVzICsrIG90aGVyTWVldGluZy5hdHRlbmRlZXMpLnRvU2V0LnRvTGlzdAogICAgICAgICkKICAgIH0KCiAgICBjYXNlIGNsYXNzIENvbXBhbnlCcmVhayhvdmVycmlkZSB2YWwgYXR0ZW5kZWVzOiBMaXN0W0VtcGxveWVlXSkKICAgICAgICBleHRlbmRzIE1lZXRpbmdbRW1wbG95ZWVdKCJDb21wYW55IEJyZWFrIiwgYXR0ZW5kZWVzKQogICAgY2FzZSBjbGFzcyBDb252ZW50aW9uKG92ZXJyaWRlIHZhbCBhdHRlbmRlZXM6IExpc3RbRW1wbG95ZWVdKQogICAgICAgIGV4dGVuZHMgTWVldGluZ1tFbXBsb3llZV0oIkNvbnZlbnRpb24iLCBhdHRlbmRlZXMpCiAgICBjYXNlIGNsYXNzIERldmVsb3BlclRyYWluaW5nKG92ZXJyaWRlIHZhbCBhdHRlbmRlZXM6IExpc3RbRGV2ZWxvcGVyXSkKICAgICAgICBleHRlbmRzIE1lZXRpbmdbRGV2ZWxvcGVyXSgiRGV2ZWxvcGVyIFRyYWluaW5nIiwgYXR0ZW5kZWVzKQp9CgppbXBvcnQgSW52YXJpYW5jZUV4YW1wbGUuXwoKdmFsIGNvbXBhbnlCcmVhayA9IENvbXBhbnlCcmVhayhMaXN0KGJvYiwgamFuZSkpCnZhbCBjb252ZW50aW9uID0gQ29udmVudGlvbihMaXN0KGJvYiwgYWxmcmVkLCBjYXNzaWUpKQovLyBXaWxsIGNvbXBpbGU6IHdlIGNhbiBnYXRoZXIgMiBtZWV0aW5ncyBvZiBFbXBsb3llZXMKdmFsIGFsbEVtcGxveWVlTWVldGluZ3MgPSBjb21wYW55QnJlYWsuZ2F0aGVyKGNvbnZlbnRpb24pIC8vIDogTWVldGluZ1tFbXBsb3llZV0KCnZhbCBkZXZUcmFpbmluZyA9IERldmVsb3BlclRyYWluaW5nKExpc3QoYWxpY2UsIGx1YykpCi8vIFdvbid0IGNvbXBpbGUgYmVjYXVzZSBvZiB0aGUgaW52YXJpYW5jZQp2YWwgYWxsTWVldGluZ3MgPSBhbGxFbXBsb3llZU1lZXRpbmdzLmdhdGhlcihkZXZUcmFpbmluZykK\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight has-highlighted-lines\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" InvarianceExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Meeting is declared as an invariant type constructor\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-highlight-code-line gatsby-highlight-or-diff-code-line-start-block gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"            s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"$name & ${otherMeeting.name}\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"attendees \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toSet\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toList\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" CompanyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Company Break\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Convention\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Developer Training\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" InvarianceExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" companyBreak \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" CompanyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bob\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" jane\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" convention \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" Convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bob\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" alfred\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" cassie\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will compile: we can gather 2 meetings of Employees\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-highlight-code-line gatsby-highlight-or-diff-code-line-start-block gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" allEmployeeMeetings \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" companyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// : Meeting[Employee]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" devTraining \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" DeveloperTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"alice\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" luc\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Won't compile because of the invariance\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" allMeetings \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" allEmployeeMeetings\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"devTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"81ch\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"As we can see in \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"InvarianceExample\"), \", we can verify at compilation time that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"only the exact same type\"), \" is allowed\\nas type parameter than the one expected: gathering a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" with a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" is not possible.\"), mdx(\"p\", null, \"What if we play with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variance annotations\"), \" ?\\nLet's see what happens if we prefix the type parameter with either a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\")), \" (i.e.: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Covariance\"), \" ) or a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\")), \"\\n(i.e.: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Contravariance\"), \")...\"), mdx(\"h3\", {\n    id: \"covariance\"\n  }, \"Covariance\"), mdx(\"h4\", null, \"Definition\"), mdx(\"p\", null, \"The word \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"covariance\\\"\"), \" is composed by a prefix \\\"co\\\" \\u2014 coming from Latin and meaning \\\"with\\\" \\u2014 before the word \\\"variance\\\",\\nand literally means \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"which vary with\\\"\"), \", or in our case: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"which vary in the same way\\\"\"), \" than the type parameter.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"), \" is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"subtype\"), \" of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \", then, given a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"covariant\"), \" type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"F\"), \", \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" will be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"subtype\"), \"\\nof \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")))), mdx(\"p\", null, \"Covariance for a type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\"), \" and a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" is noted \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \".  \"), mdx(\"h4\", null, \"Example\"), mdx(\"p\", null, \"Considering a covariant type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Meeting\"), \" with a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"+T\"), \": \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \",\\nthen \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" will be considered as a subtype of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \"\\n(and also of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \").  \"), mdx(\"p\", null, \"Thus, according to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Liskov Substitution Principle\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" can replace an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" or an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" can replace an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")))), mdx(\"p\", null, \"Let's add the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"+\"), \" variance annotation to the type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" of the previous \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"InvarianceExample\"), \"\\nand see what happens when compiling...\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IEFkZGluZ0NvdmFyaWFuY2VFeGFtcGxlIHsKICAgIGltcG9ydCBIdW1hblJlc291cmNlcy5fCgogICAgLy8gTWVldGluZyBpcyBkZWNsYXJlZCBhcyBhIGNvdmFyaWFudCB0eXBlIGNvbnN0cnVjdG9yCiAgICBjbGFzcyBNZWV0aW5nWytUXSh2YWwgbmFtZTogU3RyaW5nLCB2YWwgYXR0ZW5kZWVzOiBMaXN0W1RdKSB7CiAgICAgICBkZWYgZ2F0aGVyKG90aGVyTWVldGluZzogTWVldGluZ1tUXSk6IE1lZXRpbmdbVF0gPSBuZXcgTWVldGluZ1tUXSgKICAgICAgICAgICAgcyIkbmFtZSAmICR7b3RoZXJNZWV0aW5nLm5hbWV9IiAsCiAgICAgICAgICAgIChhdHRlbmRlZXMgKysgb3RoZXJNZWV0aW5nLmF0dGVuZGVlcykudG9TZXQudG9MaXN0CiAgICAgICAgKQogICAgfQoKICAgIGNhc2UgY2xhc3MgQ29tcGFueUJyZWFrKG92ZXJyaWRlIHZhbCBhdHRlbmRlZXM6IExpc3RbRW1wbG95ZWVdKQogICAgICAgIGV4dGVuZHMgTWVldGluZ1tFbXBsb3llZV0oIkNvbXBhbnkgQnJlYWsiLCBhdHRlbmRlZXMpCiAgICBjYXNlIGNsYXNzIENvbnZlbnRpb24ob3ZlcnJpZGUgdmFsIGF0dGVuZGVlczogTGlzdFtFbXBsb3llZV0pCiAgICAgICAgZXh0ZW5kcyBNZWV0aW5nW0VtcGxveWVlXSgiQ29udmVudGlvbiIsIGF0dGVuZGVlcykKICAgIGNhc2UgY2xhc3MgRGV2ZWxvcGVyVHJhaW5pbmcob3ZlcnJpZGUgdmFsIGF0dGVuZGVlczogTGlzdFtEZXZlbG9wZXJdKQogICAgICAgIGV4dGVuZHMgTWVldGluZ1tEZXZlbG9wZXJdKCJEZXZlbG9wZXIgVHJhaW5pbmciLCBhdHRlbmRlZXMpCn0=\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" AddingCovarianceExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Meeting is declared as a covariant type constructor\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  }), \"       \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"            s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"$name & ${otherMeeting.name}\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"attendees \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toSet\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toList\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" CompanyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Company Break\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Convention\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Developer Training\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"75ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"A new compilation error tells us:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"covariant type T occurs in contravariant position in type Meeting[T] of value otherMeeting\"), \".\"), mdx(\"p\", null, \"Actually, it makes sense: if we try to gather a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" with a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \",\\nwhat would be the concrete type parameter obtained when producing the new meeting ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The only acceptable answer is the common ancestor of an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Employee\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Developer\"), \", which is... \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Employee\"), \" !\"), mdx(\"p\", null, \"Thus, in order to get rid of the compilation error, we \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"have\"), \" to specify that the function \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"gather\"), \" can only accept\\nthe generic \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" or one of its supertype (i.e: the common ancestor):\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"Y2xhc3MgTWVldGluZ1srVF0odmFsIG5hbWU6IFN0cmluZywgdmFsIGF0dGVuZGVlczogTGlzdFtUXSkgewotICAgIGRlZiBnYXRoZXIob3RoZXJNZWV0aW5nOiBNZWV0aW5nW1RdKTogTWVldGluZ1tUXSA9IG5ldyBNZWV0aW5nW1RdKAorICAgIGRlZiBnYXRoZXJbUyA+OiBUXShvdGhlck1lZXRpbmc6IE1lZXRpbmdbU10pOiBNZWV0aW5nW1NdID0gbmV3IE1lZXRpbmdbU10oCiAgICAgICAgcyIkbmFtZSAmICR7b3RoZXJNZWV0aW5nLm5hbWV9IiAsCiAgICAgICAgKGF0dGVuZGVlcyArKyBvdGhlck1lZXRpbmcuYXR0ZW5kZWVzKS50b1NldC50b0xpc3QKICAgICkKfQ==\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), \"        s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"$name & ${otherMeeting.name}\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"attendees \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toSet\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toList\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"80ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"))))), mdx(\"h4\", {\n    id: \"type-bounds\"\n  }, \"Type Bounds\"), mdx(\"p\", null, \"The notation \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lower type bound\"), \". It constrains the generic type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"), \" to be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"supertype\"), \"\\nof type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" (previously declared in the scope), or at least the exact same type (i.e.: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \").  \"), mdx(\"p\", null, \"The converse type bound \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"upper type bound\"), \" and constrains \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"), \" to be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"subtype\"), \" of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" or a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \".\"), mdx(\"p\", null, \"It is possible to mix both \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variance annotations\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"type bounds\"), \": in our example it would be advised to add a such constraint on\\nthe \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Meeting\"), \" type constructor, else we could be able to create meetings of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Int\"), \"s such as:\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Int meeting\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), \".\"), mdx(\"p\", null, \"In our context (Meeting of HR) this type is not generic enough to deal with a mere \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" and then\\nwe can constrain \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" to be an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Employee\"), \" or one of its subtype:\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"LSBjbGFzcyBNZWV0aW5nWytUXSh2YWwgbmFtZTogU3RyaW5nLCB2YWwgYXR0ZW5kZWVzOiBMaXN0W1RdKSB7Ci0gICBkZWYgZ2F0aGVyW1MgPjogVF0ob3RoZXJNZWV0aW5nOiBNZWV0aW5nW1NdKTogTWVldGluZ1tTXSA9IG5ldyBNZWV0aW5nW1NdKAorIGNsYXNzIE1lZXRpbmdbK1QgPDogRW1wbG95ZWVdKHZhbCBuYW1lOiBTdHJpbmcsIHZhbCBhdHRlbmRlZXM6IExpc3RbVF0pIHsKKyAgIGRlZiBnYXRoZXJbUyA+OiBUIDw6IEVtcGxveWVlXShvdGhlck1lZXRpbmc6IE1lZXRpbmdbU10pOiBNZWV0aW5nW1NdID0gbmV3IE1lZXRpbmdbU10oCiAgICAgICAgcyIkbmFtZSAmICR7b3RoZXJNZWV0aW5nLm5hbWV9IiAsCiAgICAgICAgKGF0dGVuZGVlcyArKyBvdGhlck1lZXRpbmcuYXR0ZW5kZWVzKS50b1NldC50b0xpc3QKICAgICkKfQ==\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), \"  \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), \"  \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), \"        s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"$name & ${otherMeeting.name}\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"attendees \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toSet\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toList\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"91ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"))))), mdx(\"p\", null, \"N.B: we also \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"must\"), \" add the constraint everywhere \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \" is used inside the class.\"), mdx(\"p\", null, \"The full working example is now:\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IENvdmFyaWFuY2VXaXRoVHlwZUJvdW5kc0V4YW1wbGUgewogICAgaW1wb3J0IEh1bWFuUmVzb3VyY2VzLl8KCiAgICAvLyBNZWV0aW5nIGlzIGRlY2xhcmVkIGFzIGEgY292YXJpYW50IHR5cGUgY29uc3RydWN0b3Igd2l0aCBhIHR5cGUgYm91bmQKICAgIGNsYXNzIE1lZXRpbmdbK1QgPDogRW1wbG95ZWVdKHZhbCBuYW1lOiBTdHJpbmcsIHZhbCBhdHRlbmRlZXM6IExpc3RbVF0pIHsKICAgICAgICBkZWYgZ2F0aGVyW1MgPjogVCA8OiBFbXBsb3llZV0ob3RoZXJNZWV0aW5nOiBNZWV0aW5nW1NdKTogTWVldGluZ1tTXSA9IG5ldyBNZWV0aW5nW1NdKAogICAgICAgICAgICBzIiRuYW1lICYgJHtvdGhlck1lZXRpbmcubmFtZX0iICwKICAgICAgICAgICAgKGF0dGVuZGVlcyArKyBvdGhlck1lZXRpbmcuYXR0ZW5kZWVzKS50b1NldC50b0xpc3QKICAgICAgICApCiAgICB9CgoKICAgIGNhc2UgY2xhc3MgQ29tcGFueUJyZWFrKG92ZXJyaWRlIHZhbCBhdHRlbmRlZXM6IExpc3RbRW1wbG95ZWVdKQogICAgICAgIGV4dGVuZHMgTWVldGluZ1tFbXBsb3llZV0oIkNvbXBhbnkgQnJlYWsiLCBhdHRlbmRlZXMpCiAgICBjYXNlIGNsYXNzIENvbnZlbnRpb24ob3ZlcnJpZGUgdmFsIGF0dGVuZGVlczogTGlzdFtFbXBsb3llZV0pCiAgICAgICAgZXh0ZW5kcyBNZWV0aW5nW0VtcGxveWVlXSgiQ29udmVudGlvbiIsIGF0dGVuZGVlcykKICAgIGNhc2UgY2xhc3MgRGV2ZWxvcGVyVHJhaW5pbmcob3ZlcnJpZGUgdmFsIGF0dGVuZGVlczogTGlzdFtEZXZlbG9wZXJdKQogICAgICAgIGV4dGVuZHMgTWVldGluZ1tEZXZlbG9wZXJdKCJEZXZlbG9wZXIgVHJhaW5pbmciLCBhdHRlbmRlZXMpCn0KCmltcG9ydCBDb3ZhcmlhbmNlV2l0aFR5cGVCb3VuZHNFeGFtcGxlLl8KCnZhbCBjb21wYW55QnJlYWsgPSBDb21wYW55QnJlYWsoTGlzdChib2IsIGphbmUpKQp2YWwgY29udmVudGlvbiA9IENvbnZlbnRpb24oTGlzdChib2IsIGFsZnJlZCwgY2Fzc2llKSkKdmFsIGFsbEVtcGxveWVlTWVldGluZ3MgPSBjb21wYW55QnJlYWsuZ2F0aGVyKGNvbnZlbnRpb24pIC8vIDogTWVldGluZ1tFbXBsb3llZV0KCnZhbCBkZXZUcmFpbmluZyA9IERldmVsb3BlclRyYWluaW5nKExpc3QoYWxpY2UsIGx1YykpCi8vIFdpbGwgbm93IGNvbXBpbGUgdGhhbmtzIHRvIHRoZSBjb3ZhcmlhbmNlIG9mIE1lZXRpbmcKdmFsIGFsbE1lZXRpbmdzID0gYWxsRW1wbG95ZWVNZWV0aW5ncy5nYXRoZXIoZGV2VHJhaW5pbmcpIC8vIDogTWVldGluZ1tFbXBsb3llZV0KCi8vIFdvbid0IGNvbXBpbGUgdGhhbmtzIHRvIHRoZSB0eXBlIGJvdW5kcwp2YWwgaW50TWVldGluZyA9IG5ldyBNZWV0aW5nW0ludF0oIkludCBtZWV0aW5nIiwgTGlzdCgxLCAyLCAzKSkKdmFsIG1lZXRpbmdzV2l0aEludHMgPSBhbGxFbXBsb3llZU1lZXRpbmdzLmdhdGhlcihpbnRNZWV0aW5nKQo=\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight has-highlighted-lines\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" CovarianceWithTypeBoundsExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Meeting is declared as a covariant type constructor with a type bound\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-highlight-code-line gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"String\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-highlight-code-line gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), \"            s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"$name & ${otherMeeting.name}\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"attendees \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \" otherMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toSet\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"toList\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" CompanyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Company Break\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Convention\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"override\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Developer Training\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" attendees\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" CovarianceWithTypeBoundsExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" companyBreak \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" CompanyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bob\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" jane\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" convention \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" Convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bob\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" alfred\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" cassie\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" allEmployeeMeetings \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" companyBreak\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"convention\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// : Meeting[Employee]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" devTraining \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" DeveloperTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"alice\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" luc\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will now compile thanks to the covariance of Meeting\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-highlight-code-line gatsby-highlight-or-diff-code-line-start-block gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" allMeetings \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" allEmployeeMeetings\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"devTraining\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// : Meeting[Employee]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Won't compile thanks to the type bounds\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" intMeeting \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" Meeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Int meeting\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" meetingsWithInts \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" allEmployeeMeetings\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"gather\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"intMeeting\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Modeling business rules relying on types is a good practice called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"type-driven design\"), \",\\nit allows us to check them directly \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"at compilation time\"), \" and help us \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"making illegal states unrepresentables\"), \".\"), mdx(\"h3\", {\n    id: \"contravariance\"\n  }, \"Contravariance\"), mdx(\"h4\", null, \"Definition\"), mdx(\"p\", null, \"The word \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"contravariance\\\"\"), \" is composed by a prefix \\\"contra\\\" \\u2014 coming from Latin and meaning \\\"against\\\" \\u2014\\nbefore the word \\\"variance\\\", and literally means \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"which vary against\\\"\"), \", or in our case: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"which vary in the opposite way\\\"\"), \"\\nthan the type parameter (cf. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Liskov Substitution Principle\"), \").\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S\"), \" is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"subtype\"), \" of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"T\"), \", then, given a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"contravariant\"), \" type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"F\"), \",\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"S\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" will be a \", mdx(\"del\", {\n    parentName: \"p\"\n  }, \"subtype\"), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"supertype\"), \" of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")))), mdx(\"p\", null, \"Contravariance for a type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\"), \" and a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"T\"), \" is noted \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \". \"), mdx(\"h4\", null, \"Example\"), mdx(\"p\", null, \"An example to illustrate contravariance would be first to define an invariant type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \"\\nwith a function \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"welcome\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), \" taking the generic type as parameter.\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"YWJzdHJhY3QgY2xhc3MgV2VsY29taW5nW1RdIHsKICAgIGRlZiB3ZWxjb21lKHQ6IFQpOiBVbml0Cn0=\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"30ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"30ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"30ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"))))), mdx(\"p\", null, \"And then we can create 2 \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Welcoming\"), \" subclasses for welcoming differently either an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Employee\"), \" or a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Developer\"), \".\\nAnd also a companion object for our \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" type constructor, the object named \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Welcoming\"), \" with\\na generic constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"apply\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" which would automatically perform the welcoming.\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IENvbnRyYXZhcmlhbmNlRHJhZnRFeGFtcGxlIHsKICAgIGltcG9ydCBIdW1hblJlc291cmNlcy5fCgogICAgYWJzdHJhY3QgY2xhc3MgV2VsY29taW5nW1RdIHsKICAgICAgICBkZWYgd2VsY29tZSh0OiBUKTogVW5pdAogICAgfQoKICAgIC8vIENvbXBhbmlvbiBvYmplY3Qgb2YgYWJzdHJhY3QgY2xhc3MgV2VsY29taW5nW1RdCiAgICBvYmplY3QgV2VsY29taW5nIHsKICAgICAgICBkZWYgYXBwbHlbVF0odDogVCwgd2VsY29taW5nOiBXZWxjb21pbmdbVF0pOiBVbml0ID0KICAgICAgICAgICAgd2VsY29taW5nLndlbGNvbWUoaHIpCiAgICB9CgogICAgLy8gQ3VzdG9tIHN1YmNsYXNzZXMgZm9yIGRpZmZmZXJlbnQgd2VsY29taW5nCgogICAgY2xhc3MgRW1wbG95ZWVXZWxjb21pbmcgZXh0ZW5kcyBXZWxjb21pbmdbRW1wbG95ZWVdIHsKICAgICAgIGRlZiB3ZWxjb21lKHQ6IEVtcGxveWVlKTogVW5pdCA9IAogICAgICAgICAgICBwcmludGxuKHMiV2VsY29tZSBpbiBvdXIgY29tcGFueSAke3QubmFtZX0gISIpCiAgICB9CgogICAgY2xhc3MgRGV2ZWxvcGVyV2VsY29taW5nIGV4dGVuZHMgV2VsY29taW5nW0RldmVsb3Blcl0gewogICAgICAgIGRlZiB3ZWxjb21lKHQ6IERldmVsb3Blcik6IFVuaXQgPQogICAgICAgICAgICBwcmludGxuKAogICAgICAgICAgICAgICAgcyJXZWxjb21lIGluIG91ciBjb21wYW55IDwke3QubmFtZX0+LCBoYXBweSBjb2RpbmcgaW4gJHt0LmZhdm9yaXRlTGFuZ3VhZ2V9ICEiCiAgICAgICAgICAgICkKICAgIH0KfQoKaW1wb3J0IENvbnRyYXZhcmlhbmNlRHJhZnRFeGFtcGxlLl8KCnZhbCBlbXBsb3llZVdlbGNvbWluZyA9IG5ldyBFbXBsb3llZVdlbGNvbWluZwp2YWwgZGV2ZWxvcGVyV2VsY29taW5nID0gbmV3IERldmVsb3BlcldlbGNvbWluZwoKLy8gV2lsbCBwcmludDogIldlbGNvbWUgaW4gb3VyIGNvbXBhbnkgTHVjICEiCldlbGNvbWluZ1tFbXBsb3llZV0oRGV2ZWxvcGVyKCJMdWMiLCAiU2NhbGEiKSwgZW1wbG95ZWVXZWxjb21pbmcpCgovLyBXaWxsIHByaW50OiAiV2VsY29tZSBpbiBvdXIgY29tcGFueSA8THVjPiwgaGFwcHkgY29kaW5nIGluIFNjYWxhICEiCldlbGNvbWluZ1tEZXZlbG9wZXJdKERldmVsb3BlcigiTHVjIiwgIlNjYWxhIiksIGRldmVsb3BlcldlbGNvbWluZykKCi8vIFdvbid0IGNvbXBpbGUgdW5sZXNzIFdlbGNvbWluZ1tUXSBiZWNvbWVzIGNvbnRyYXZhcmlhbnQgYW5kIHByaW50OiAKLy8gIldlbGNvbWUgaW4gb3VyIGNvbXBhbnkgTHVjICEiCldlbGNvbWluZ1tEZXZlbG9wZXJdKERldmVsb3BlcigiTHVjIiwgIlNjYWxhIiksIGVtcGxveWVlV2VsY29taW5nKQo=\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" ContravarianceDraftExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Companion object of abstract class Welcoming[T]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" Welcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" apply\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"hr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Custom subclasses for diffferent welcoming\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" EmployeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company ${t.name} !\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"                s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company <${t.name}>, happy coding in ${t.favoriteLanguage} !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" ContravarianceDraftExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" employeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" EmployeeWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" developerWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" DeveloperWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company <Luc>, happy coding in Scala !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" developerWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Won't compile unless Welcoming[T] becomes contravariant and print: \")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"A \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" needs a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"DeveloperWelcoming\"), \" instance, as our \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Welcoming\"), \" type constructor is invariant for the moment.\\nIt means it cannot welcome with an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"EmployeeWelcoming\"), \" provided instance (cf. L42).  \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Does it mean there is no chance an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"EmployeeWelcoming\"), \" be used to welcome a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Developer\"), \" ?  \")), mdx(\"p\", null, \"Actually, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"it doesn't\"), \" ! It would just perform the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"welcome\"), \" considering the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Developer\"), \" is just an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Employee\"), \".  \"), mdx(\"p\", null, \"Let's add the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"-\"), \" variance annotation to the type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" of the previous \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ContravarianceDraftExample\"), \"\\nand see what happens when compiling...\"), mdx(\"p\", null, \"Considering a contravariant type constructor \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\"), \" with a type parameter \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"-T\"), \": \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \",\\nthen, according to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Liskov Substitution Principle\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" can replace an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" or an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"TechEmployee\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" can replace an expected \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")))), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IENvbnRyYXZhcmlhbmNlRXhhbXBsZSB7CiAgICBpbXBvcnQgSHVtYW5SZXNvdXJjZXMuXwoKLSAgICBhYnN0cmFjdCBjbGFzcyBXZWxjb21pbmdbVF0geworICAgIGFic3RyYWN0IGNsYXNzIFdlbGNvbWluZ1stVF0gewogICAgICAgIGRlZiB3ZWxjb21lKHQ6IFQpOiBVbml0CiAgICB9CgogICAgb2JqZWN0IFdlbGNvbWluZyB7CiAgICAgICAgZGVmIGFwcGx5W1RdKHQ6IFQsIHdlbGNvbWluZzogV2VsY29taW5nW1RdKTogVW5pdCA9CiAgICAgICAgICAgIHdlbGNvbWluZy53ZWxjb21lKGhyKQogICAgfQoKICAgIGNsYXNzIEVtcGxveWVlV2VsY29taW5nIGV4dGVuZHMgV2VsY29taW5nW0VtcGxveWVlXSB7CiAgICAgICBkZWYgd2VsY29tZSh0OiBFbXBsb3llZSk6IFVuaXQgPSAKICAgICAgICAgICAgcHJpbnRsbihzIldlbGNvbWUgaW4gb3VyIGNvbXBhbnkgJHt0Lm5hbWV9ICEiKQogICAgfQoKICAgIGNsYXNzIERldmVsb3BlcldlbGNvbWluZyBleHRlbmRzIFdlbGNvbWluZ1tEZXZlbG9wZXJdIHsKICAgICAgICBkZWYgd2VsY29tZSh0OiBEZXZlbG9wZXIpOiBVbml0ID0KICAgICAgICAgICAgcHJpbnRsbigKICAgICAgICAgICAgICAgIHMiV2VsY29tZSBpbiBvdXIgY29tcGFueSA8JHt0Lm5hbWV9PiwgaGFwcHkgY29kaW5nIGluICR7dC5mYXZvcml0ZUxhbmd1YWdlfSAhIgogICAgICAgICAgICApCiAgICB9Cn0KCmltcG9ydCBDb250cmF2YXJpYW5jZUV4YW1wbGUuXwoKdmFsIGVtcGxveWVlV2VsY29taW5nID0gbmV3IEVtcGxveWVlV2VsY29taW5nCnZhbCBkZXZlbG9wZXJXZWxjb21pbmcgPSBuZXcgRGV2ZWxvcGVyV2VsY29taW5nCgovLyBXaWxsIHByaW50OiAiV2VsY29tZSBpbiBvdXIgY29tcGFueSBMdWMgISIKV2VsY29taW5nW0VtcGxveWVlXShEZXZlbG9wZXIoIkx1YyIsICJTY2FsYSIpLCBlbXBsb3llZVdlbGNvbWluZykKCi8vIFdpbGwgcHJpbnQ6ICJXZWxjb21lIGluIG91ciBjb21wYW55IDxMdWM+LCBoYXBweSBjb2RpbmcgaW4gU2NhbGEgISIKV2VsY29taW5nW0RldmVsb3Blcl0oRGV2ZWxvcGVyKCJMdWMiLCAiU2NhbGEiKSwgZGV2ZWxvcGVyV2VsY29taW5nKQoKLy8gTm93IGNvbXBpbGUgYW5kIHByaW50OiAiV2VsY29tZSBpbiBvdXIgY29tcGFueSBMdWMgISIKV2VsY29taW5nW0RldmVsb3Blcl0oRGV2ZWxvcGVyKCJMdWMiLCAiU2NhbGEiKSwgZW1wbG95ZWVXZWxjb21pbmcpCg==\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" ContravarianceExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" Welcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" apply\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"hr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" EmployeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company ${t.name} !\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"        \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"                s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company <${t.name}>, happy coding in ${t.favoriteLanguage} !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" ContravarianceExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" employeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" EmployeeWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" developerWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" DeveloperWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company <Luc>, happy coding in Scala !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" developerWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Now compile and print: \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Now, welcoming a developer with an employee welcoming is possible.  \"), mdx(\"p\", null, \"But we can still create odd things such as:\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"Y2xhc3MgSW50V2VsY29taW5nIGV4dGVuZHMgV2VsY29taW5nW0ludF0gewogICAgZGVmIHdlbGNvbWUodDogSW50KTogVW5pdCA9IHByaW50bG4ocyJIYWhhLCBJJ20gYW4gaW50ZWdlcjogJHQgISIpCn0KdmFsIGludFdlbGNvbWluZyA9IG5ldyBJbnRXZWxjb21pbmcKV2VsY29taW5nW0ludF0oMSwgaW50V2VsY29taW5nKQ==\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"71ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" IntWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"71ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Haha, I'm an integer: $t !\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"71ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"71ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" intWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" IntWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"71ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" intWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"))))), mdx(\"p\", null, \"In order to encode properly business rules and add programming good practice, let's add some type bounds and some important keywords.  \"), mdx(\"p\", null, \"Considering the business rules are locked, it would give:\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"b2JqZWN0IENvbnRyYXZhcmlhbmNlTG9ja2VkRXhhbXBsZSB7CiAgICBpbXBvcnQgSHVtYW5SZXNvdXJjZXMuXwoKLSAgICBhYnN0cmFjdCBjbGFzcyBXZWxjb21pbmdbLVRdIHsKLSAgICAgICAgZGVmIHdlbGNvbWUodDogVCk6IFVuaXQKKyAgICBwcml2YXRlW0NvbnRyYXZhcmlhbmNlTG9ja2VkRXhhbXBsZV0gYWJzdHJhY3QgY2xhc3MgV2VsY29taW5nWy1UIDw6IEVtcGxveWVlXSB7CisgICAgICAgIHByb3RlY3RlZCBkZWYgd2VsY29tZSh0OiBUKTogVW5pdAogICAgfQoKICAgIC8vIENvbXBhbmlvbiBvYmplY3Qgb2YgYWJzdHJhY3QgY2xhc3MgV2VsY29taW5nW1RdCiAgICBvYmplY3QgV2VsY29taW5nIHsKLSAgICAgICAgZGVmIGFwcGx5W1RdKHQ6IFQsIHdlbGNvbWluZzogV2VsY29taW5nW1RdKTogVW5pdCA9CisgICAgICAgIGRlZiBhcHBseVtUIDw6IEVtcGxveWVlXSh0OiBULCB3ZWxjb21pbmc6IFdlbGNvbWluZ1tUXSk6IFVuaXQgPQogICAgICAgICAgICB3ZWxjb21pbmcud2VsY29tZShocikKICAgIH0KCiAgICAvLyBDdXN0b20gc3ViY2xhc3NlcyBmb3IgZGlmZmZlcmVudCB3ZWxjb21pbmcKCi0gICAgY2xhc3MgRW1wbG95ZWVXZWxjb21pbmcgZXh0ZW5kcyBXZWxjb21pbmdbRW1wbG95ZWVdIHsKLSAgICAgICBkZWYgd2VsY29tZSh0OiBFbXBsb3llZSk6IFVuaXQgPSAKKyAgICBjYXNlIG9iamVjdCBFbXBsb3llZVdlbGNvbWluZyBleHRlbmRzIFdlbGNvbWluZ1tFbXBsb3llZV0geworICAgICAgIHByb3RlY3RlZCBmaW5hbCBkZWYgd2VsY29tZSh0OiBFbXBsb3llZSk6IFVuaXQgPQogICAgICAgICAgICBwcmludGxuKHMiV2VsY29tZSBpbiBvdXIgY29tcGFueSAke3QubmFtZX0gISIpCiAgICB9CgotICAgIGNsYXNzIERldmVsb3BlcldlbGNvbWluZyBleHRlbmRzIFdlbGNvbWluZ1tEZXZlbG9wZXJdIHsKLSAgICAgICAgZGVmIHdlbGNvbWUodDogRGV2ZWxvcGVyKTogVW5pdCA9CisgICAgY2FzZSBvYmplY3QgRGV2ZWxvcGVyV2VsY29taW5nIGV4dGVuZHMgV2VsY29taW5nW0RldmVsb3Blcl0geworICAgICAgICBwcm90ZWN0ZWQgZmluYWwgZGVmIHdlbGNvbWUodDogRGV2ZWxvcGVyKTogVW5pdCA9CiAgICAgICAgICAgIHByaW50bG4oCiAgICAgICAgICAgICAgICBzIldlbGNvbWUgaW4gb3VyIGNvbXBhbnkgPCR7dC5uYW1lfT4sIGhhcHB5IGNvZGluZyBpbiAke3QuZmF2b3JpdGVMYW5ndWFnZX0gISIKICAgICAgICAgICAgKQogICAgfQp9CgppbXBvcnQgQ29udHJhdmFyaWFuY2VMb2NrZWRFeGFtcGxlLl8KCi0gdmFsIGVtcGxveWVlV2VsY29taW5nID0gbmV3IEVtcGxveWVlV2VsY29taW5nCi0gdmFsIGRldmVsb3BlcldlbGNvbWluZyA9IG5ldyBEZXZlbG9wZXJXZWxjb21pbmcKKyB2YWwgZW1wbG95ZWVXZWxjb21pbmcgPSBFbXBsb3llZVdlbGNvbWluZworIHZhbCBkZXZlbG9wZXJXZWxjb21pbmcgPSBEZXZlbG9wZXJXZWxjb21pbmcKCi8vIFdpbGwgcHJpbnQ6ICJXZWxjb21lIGluIG91ciBjb21wYW55IEx1YyAhIgpXZWxjb21pbmdbRW1wbG95ZWVdKERldmVsb3BlcigiTHVjIiwgIlNjYWxhIiksIGVtcGxveWVlV2VsY29taW5nKQoKLy8gV2lsbCBwcmludDogIldlbGNvbWUgaW4gb3VyIGNvbXBhbnkgPEx1Yz4sIGhhcHB5IGNvZGluZyBpbiBTY2FsYSAhIgpXZWxjb21pbmdbRGV2ZWxvcGVyXShEZXZlbG9wZXIoIkx1YyIsICJTY2FsYSIpLCBkZXZlbG9wZXJXZWxjb21pbmcpCgovLyBXaWxsIHByaW50OiAiV2VsY29tZSBpbiBvdXIgY29tcGFueSBMdWMgISIKV2VsY29taW5nW0RldmVsb3Blcl0oRGV2ZWxvcGVyKCJMdWMiLCAiU2NhbGEiKSwgZW1wbG95ZWVXZWxjb21pbmcp\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" ContravarianceLockedExample \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" HumanResources\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"private\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"ContravarianceLockedExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"abstract\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"protected\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Companion object of abstract class Welcoming[T]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" Welcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" apply\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" apply\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"hr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Custom subclasses for diffferent welcoming\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" EmployeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"      \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" EmployeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"      \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"protected\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"final\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company ${t.name} !\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" DeveloperWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"   \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"object\"), \" DeveloperWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"       \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"protected\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"final\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"def\"), \" welcome\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Unit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            println\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"                s\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Welcome in our company <${t.name}>, happy coding in ${t.favoriteLanguage} !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"            \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" ContravarianceLockedExample\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"_\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus gatsby-highlight-or-diff-code-line-start-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" employeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" EmployeeWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-minus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" developerWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" DeveloperWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" employeeWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" EmployeeWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-diff-line gatsby-diff-line-plus gatsby-highlight-or-diff-code-line-end-block\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" developerWelcoming \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" DeveloperWelcoming\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Employee\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company <Luc>, happy coding in Scala !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" developerWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Will print: \\\"Welcome in our company Luc !\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"95ch\"\n    }\n  }), \"Welcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"Developer\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Luc\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Scala\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" employeeWelcoming\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Welcoming\"), \" class has now a generic type constraint according to domain rules, and\\nis now only extendable within \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ContravarianceLockedExample\"), \" object.\"), mdx(\"hr\", null), mdx(\"h3\", {\n    id: \"handmade-variance-verification\"\n  }, \"Handmade variance verification\"), mdx(\"p\", null, \"If we want to type-check ourselves a type constructor variance, in order to help us we can play with:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generic types aliases \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"type\"), \" F\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"A\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"//...\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the infix class \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\")), \" along with its implicit evidence, which witnesses subtype relationship between 2 types\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"type composition (\", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"with\")), \" keyword) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" parameterized function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the compiler :)\")), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"Y2xhc3MgU3VwZXIKY2xhc3MgU3ViIGV4dGVuZHMgU3VwZXIKCmNsYXNzIEludmFyaWFudFtUXQpjbGFzcyBDb3ZhcmlhbnRbK1RdCmNsYXNzIENvbnRyYXZhcmlhbnRbLVRdCgp0eXBlIElzQ292YXJpYW50W0ZbX10sIFN1cGVyVHlwZSwgU3ViVHlwZV0gPQogICAgKFN1YlR5cGUgPDo8IFN1cGVyVHlwZSkKICAgIHdpdGggRltTdWJUeXBlXSA8OjwgRltTdXBlclR5cGVdCgp0eXBlIElzQ29udHJhdmFyaWFudFtGW19dLCBTdXBlclR5cGUsIFN1YlR5cGVdID0KICAgIChTdWJUeXBlIDw6PCBTdXBlclR5cGUpCiAgICB3aXRoIEZbU3VwZXJUeXBlXSA8OjwgRltTdWJUeXBlXQoKLy8gQ2hlY2tpbmcgYW4gaW52YXJpYW50IHR5cGUgY29uc3RydWN0b3IKaW1wbGljaXRseVtJc0NvdmFyaWFudFtJbnZhcmlhbnQsIFN1cGVyLCBTdWJdXQppbXBsaWNpdGx5W0lzQ29udHJhdmFyaWFudFtJbnZhcmlhbnQsIFN1cGVyLCBTdWJdXQoKLy8gQ2hlY2tpbmcgYSBjb3ZhcmlhbnQgdHlwZSBjb25zdHJ1Y3RvcgppbXBsaWNpdGx5W0lzQ292YXJpYW50W0NvdmFyaWFudCwgU3VwZXIsIFN1Yl1dCmltcGxpY2l0bHlbSXNDb250cmF2YXJpYW50W0NvdmFyaWFudCwgU3VwZXIsIFN1Yl1dCi8vIFN3aXRjaGluZyB0aGUgc3VwZXJ0eXBlIGFuZCB0aGUgc3VidHlwZSBwb3NpdGlvbnMgd29ya3MgIQppbXBsaWNpdGx5W0lzQ29udHJhdmFyaWFudFtDb3ZhcmlhbnQsIFN1YiwgU3VwZXJdXQoKLy8gQ2hlY2tpbmcgYSBjb250cmF2YXJpYW50IHR5cGUgY29uc3RydWN0b3IgCmltcGxpY2l0bHlbSXNDb3ZhcmlhbnRbQ29udHJhdmFyaWFudCwgU3VwZXIsIFN1Yl1dCi8vIFN3aXRjaGluZyB0aGUgc3VwZXJ0eXBlIGFuZCB0aGUgc3VidHlwZSBwb3NpdGlvbnMgd29ya3MgIQppbXBsaWNpdGx5W0lzQ292YXJpYW50W0NvbnRyYXZhcmlhbnQsIFN1YiwgU3VwZXJdXQppbXBsaWNpdGx5W0lzQ29udHJhdmFyaWFudFtDb250cmF2YXJpYW50LCBTdXBlciwgU3ViXV0KCi8vIENoZWNraW5nIGEgY29tbW9ubHkgdXNlZCB0eXBlIGNvbnN0cnVjdG9yOiBMaXN0ICh3aGljaCBpcyBjb3ZhcmlhbnQpCmltcGxpY2l0bHlbSXNDb3ZhcmlhbnRbTGlzdCwgQW55VmFsLCBJbnRdXQppbXBsaWNpdGx5W0lzQ292YXJpYW50W0xpc3QsIEludCwgQW55VmFsXV0KaW1wbGljaXRseVtJc0NvbnRyYXZhcmlhbnRbTGlzdCwgQW55VmFsLCBJbnRdXQppbXBsaWNpdGx5W0lzQ29udHJhdmFyaWFudFtMaXN0LCBJbnQsIEFueVZhbF1d\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber 0\"\n    },\n    \"className\": \"language-scala line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Super\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Sub \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" Super\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Invariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Covariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" Contravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"T\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"type\"), \" IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"_\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" SubType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"SubType \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"with\"), \" F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"SubType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"type\"), \" IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"_\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" SubType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"SubType \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"with\"), \" F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"SuperType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" F\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"SubType\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Checking an invariant type constructor\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Invariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Invariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Checking a covariant type constructor\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Covariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Covariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Switching the supertype and the subtype positions works !\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Covariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Checking a contravariant type constructor \")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Contravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Switching the supertype and the subtype positions works !\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Contravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"Contravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Super\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Sub\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Checking a commonly used type constructor: List (which is covariant)\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsCovariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line gatsby-compile-line gatsby-compile-line-failure\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-compile-ws\"\n  })), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"72ch\"\n    }\n  }), \"implicitly\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"IsContravariant\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"AnyVal\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"))), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"hr\", null), mdx(\"h3\", {\n    id: \"caveats\"\n  }, \"Caveats\"), mdx(\"p\", null, \"I recently stumbled upon \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/zio/zio-prelude/issues/113\"\n  }), \"a ZIO Prelude issue\"), \" about\\nthe behavior of a contravariant type constructor when an implicit instance is created among other ones,\\nfor the Scala \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Bottom_type\"\n  }), \"bottom type\"), \" \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Nothing\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It led me to a part of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"the Blue book\"), \"\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leanpub.com/fpmortals/read#leanpub-auto-type-variance\"\n  }), \"Functional Programming for Mortals\"), \" by Sam Halliday)\\ntalking about variance.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The contravariant issue will be fixed in Dotty (aka Scala 3). But for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"covariant\"), \" types, it's worth being aware that:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The problem with covariant type parameters, such as class \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"List\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \"A\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \", is that \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"List\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"A\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \"\\nis a subtype of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"List\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin\"\n  }), \"Any\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\")), \" and it is easy to accidentally lose type information.\")), mdx(\"p\", null, \"As the concrete type infered by covariance is the first common supertype of the two concerned types, it may be\\nthe Scala \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Top_type\"\n  }), \"top type\"), \" \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Any\"), \".\"), mdx(\"p\", null, \"For instance, a list of integers and strings:\"), mdx(\"div\", {\n    className: \"gatsby-code-heading-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language-container\"\n  }, mdx(\"div\", {\n    className: \"gatsby-code-language\"\n  }, \"scala\")), mdx(\"div\", {\n    className: \"gatsby-code-button-container\",\n    onClick: function onClick() {\n      return copyToClipboard(\"TGlzdCgxLCAiQSIsIDIsICJCIikgLy8gOiBMaXN0W0FueV0gPSBMaXN0KDEsICJBIiwgMiwgIkIiKQ==\");\n    }\n  }, mdx(\"div\", {\n    className: \"gatsby-code-button\"\n  }, mdx(\"svg\", {\n    className: \"gatsby-code-button-icon\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"0.8em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, mdx(\"path\", {\n    d: \"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"\n  }))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scala\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"gatsby-code-line\",\n    \"style\": {\n      \"minWidth\": \"59ch\"\n    }\n  }), \"List\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"A\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"B\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// : List[Any] = List(1, \\\"A\\\", 2, \\\"B\\\")\"))))), mdx(\"p\", null, \"When creating your own covariant classes, do not hesitate to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type-bounds\"\n  }), \"type bounds\"), \" to constrain it to fit\\nthe business rules.\"), mdx(\"hr\", null), mdx(\"h3\", null, \"That's all folks !\"), mdx(\"p\", null, \"I hope you appreciated reading my very first technical post.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Do not hesitate to contact me if you have a question about it.  \"), mdx(\"p\", null, \"Thank you !\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"When we want to factorize common behaviors, we can rely on  generics  (also known as  type constructors  \nor  parametric polymorphic types ). The Scala language…","timeToRead":5,"frontmatter":{"title":"Variance in Scala","date":"October 09, 2020","description":null,"additionalTimeToRead":5}}},"pageContext":{"id":"75ef54b6-a0ed-5154-a987-bcbb452a9e92","slug":"/variance-in-scala/","source":"posts","previous":null,"next":null}},"staticQueryHashes":["1701402153","2623648297","2623648297","2708648277","2708648277","2974143386","2974143386","942210989","942210989"]}